name: Java Web App CI/CD

on:
  push:
    branches:
      - main

jobs:
  create-build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
          distribution: 'adopt'
          java-version: '17'

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build with Maven
      run: |
        mvn --version
        mvn clean
        mvn install
        cd target
        ls

  upload-artifacts-s3:
    needs: create-build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Upload artifacts to AWS S3
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Upload to S3
      run: |
        aws s3 cp Menu-Driven-0.0.1-SNAPSHOT.jar s3://online-book-store-iiit/

  docker-build-and-upload-ecr:
    needs: upload-artifacts-s3
    runs-on: ubuntu-latest

    steps:
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download JAR from S3
      run: |
        aws s3 cp s3://online-book-store-iiit/Menu-Driven-0.0.1-SNAPSHOT.jar ./

    - name: Docker Build and Upload to ECR
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/s3c4l2m0
        docker build -t online-book .
        docker tag online-book:latest public.ecr.aws/s3c4l2m0/online-book:latest
        docker push public.ecr.aws/s3c4l2m0/online-book:latest

  continuous-deploy-to-ecs:
    needs: docker-build-and-upload-ecr
    runs-on: ubuntu-latest

    steps:
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Deploy to ECS
      run: |
        aws ecs update-service --cluster online-library --service online-library --force-new-deployment

  continuous-monitoring:
    needs: continuous-deploy-to-ecs
    runs-on: ubuntu-latest

    steps:
    - name: Monitor URL
      run: |
        URL="https://online-library.neuraforgelabs.click/"
        STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" $URL)
        if [ $STATUS_CODE -eq 200 ]; then
          echo "Deployment Successful! Application is Healthy. Status code: $STATUS_CODE"
        else
          echo "Deployment Failed. Application Not Healthy. Status code: $STATUS_CODE"
          exit 1
        fi
